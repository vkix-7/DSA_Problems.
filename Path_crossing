/*
Given a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively. You start at the origin (0, 0) on a 2D plane and walk on the path specified by path.

Return true if the path crosses itself at any point, that is, if at any time you are on a location you have previously visited. Return false otherwise. */
class Solution {
public:
    bool isPathCrossing(string movementPath) {
        unordered_set<string> visitedPoints;
        int currentX = 0, currentY = 0;
        visitedPoints.insert(to_string(currentX) + "," + to_string(currentY));
        
        for (auto direction : movementPath) {
            if (direction == 'N') ++currentY;
            else if (direction == 'S') --currentY;
            else if (direction == 'E') ++currentX;
            else --currentX;
            
            if (visitedPoints.count(to_string(currentX) + "," + to_string(currentY))) {
                return true;
            }
            
            visitedPoints.insert(to_string(currentX) + "," + to_string(currentY));
        }
        
        return false;
    }
};